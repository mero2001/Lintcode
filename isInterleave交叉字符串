public class Solution {
    /*
     * @param s1: A string
     * @param s2: A string
     * @param s3: A string
     * @return: Determine whether s3 is formed by interleaving of s1 and s2
     */
    public boolean isInterleave(String s1, String s2, String s3) {
        // write your code here
        if(s3.length()!=s1.length()+s2.length()){  
            return false;  
        }
        if(s1.length()==0){  
            return s2.equals(s3);
        }
        if(s2.length()==0){  
            return s1.equals(s3);
        }
        boolean[][] dp=new boolean[s1.length()+1][s2.length()+1];  
        dp[0][0] = true;  
        for(int i=1;i<=s1.length();i++)  
            dp[i][0] = dp[i-1][0]&&(s3.charAt(i-1)==s1.charAt(i-1));  
        for(int i=1;i<=s2.length();i++)  
            dp[0][i] = dp[0][i-1]&&(s3.charAt(i-1)==s2.charAt(i-1));  
        for(int i=1;i<=s1.length();i++)  
        {  
            for(int j=1;j<=s2.length();j++)  
            {  
                int t = i+j;  
                if(s1.charAt(i-1)==s3.charAt(t-1))  
                    dp[i][j] = dp[i][j]||dp[i-1][j];  
                if(s2.charAt(j-1)==s3.charAt(t-1))  
                    dp[i][j] = dp[i][j]||dp[i][j-1];  
            }  
        }  
        return dp[s1.length()][s2.length()];  
    
    }
}

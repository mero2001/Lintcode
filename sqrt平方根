public class Solution {
    /*
     * @param x: An integer
     * @return: The sqrt of x
     */
    public int sqrt(int x) {
        // write your code here
        int min=0;//定义最小值、最大值和中值
        int max=x;
        int mid=(min+max)/2;
        if(x==1){
            return 1;
        }
        if(mid>46340){//避免溢出
                max=46341;
                mid=(min+max)/2;
            }
        while(min!=(max+min)/2){//二分查找
            
            System.out.println("mid:"+mid);
            int num=mid*mid;
            System.out.println("num:"+num);
            if(num>x){
                max=mid;
                mid=(min+max)/2;
                System.out.println("max:"+max);
            }else if(num<x){
                min=mid;
                mid=(min+max)/2;
                System.out.println("min:"+min);
            }else if(num==x){
                return (min+max)/2;
            }
        }
        return (min+max)/2;
        /*int len=x.toString().length();
        int[] A=new int[len];
        for(int i=len-1;i>=0;i--){
            A[i]=(x/Math.power(10,i));
        }
        boolean flag =false;
        int a;
        if(len%2==0){
            for(int i=1;i<10;i++){
                if(i*i>(10*A[0]+A[1])){
                    a=i-1;
                    flag=true;
                    break;
                }
            }
            if(!flag){
                a=9;
            }
            
          
        }*/
        /*int a;
        for(int i=1;i<4;i++){
            if(i*i>A[0]){
                a=i-1;
            }else if(i*i==A[0]){
                a=i;
            }
        }
        int min=Math.power(10,(len-1)*2);
        int max=Math.power(10,len*2)
        if(len%2==0){
            min=Math.power(10,len/2-1);
            max=Math.power(10,len/2);
        }else{
            min=Math.power(10,(len-1)/2);
            max=Math.power(10,(len-1)/2+1);
        }*/
        
    }
}

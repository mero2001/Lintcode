
//合并两个排序的整数数组A和B变成一个新的数组。
// 注意事项

//你可以假设A具有足够的空间（A数组的大小大于或等于m+n）去添加B中的元素。
public class Solution {
    /*
     * @param A: sorted integer array A which has m elements, but size of A is m+n
     * @param m: An integer
     * @param B: sorted integer array B which has n elements
     * @param n: An integer
     * @return: nothing
     */
    public void mergeSortedArray(int[] A, int m, int[] B, int n) {
        // write your code here
        /*int aMax=0;
        for(int i=1;i<m;i++){
            if(A[i]==null){
                aMax=i-1;
                break;
            }
        }*/
        //System.out.println(aMax);
        /*if(B[0]>A[aMax]){
            for(int i=0;i<m;i++){
                int temp=A[n+i];
                A[n+i]=A[i];
                
            }
        }*/
        
        for(int i=m;i<m+n;i++){//合并AB数组
            A[i]=B[i-m];
        }
        if(m==0){//如果m=0，则不执行后续程序
            return;
        }
        //System.out.println(Arrays.toString(A));
        
        /*for(int i=0;i+1<m+n;i++){
            if(A[i]>A[i+1]){
                int temp=A[i+1];
                A[i+1]=A[i];
                A[i]=temp;
            }
        }*/
        for(int i=m;i<m+n;i++){
            if(A[i]>A[i-1]){
                break;//如果B的最小值大于A的最大值，则不执行后续程序
            }
            for(int j=i;j-1>=0;j--){//冒泡法比较B中元素与A的元素
                if(A[j]<A[j-1]){
                    int temp=A[j-1];
                    A[j-1]=A[j];
                    A[j]=temp;
                }
            }
        }
    }
}

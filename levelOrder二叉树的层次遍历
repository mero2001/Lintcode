/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param root: A Tree
     * @return: Level order a list of lists of integer
     */
    public List<List<Integer>> levelOrder(TreeNode root) {
        // write your code here
        //用一个队列实现，队列保存每层的节点，以此遍历每层。 
        List<List<Integer>> rst=new ArrayList<List<Integer>>();
        
        if(root==null){
            return rst;
        }
        
        LinkedList<TreeNode> list=new LinkedList<TreeNode>();//定义队列保存所有节点
        list.offer(root);//从根节点开始
        
        while(!list.isEmpty()){
            ArrayList<Integer> res=new ArrayList<Integer>();
            int size=list.size();
            for(int i=0;i<size;i++){
                TreeNode node=list.poll();//返回并移除队列的头元素
                if(node.left!=null){//在队列后端插入子节点
                    list.offer(node.left);
                }
                if(node.right!=null){
                    list.offer(node.right);
                }
                res.add(node.val);
                
            }
            rst.add(res);
        }
        
        return rst;
            
            
        }
    }
